name: develop branch CI/CD

on: 
  push:            
    branches: develop ## develop 브랜치 대상
    
jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: repository 내용 가져오기
        uses: actions/checkout@master

      - name: ENV, MONGO_ENV 환경변수 생성
        run: |
          touch env
          echo "${{ secrets.DEV_ENV }}" > .env
          touch mongo.env
          echo "${{ secrets.DEV_MONGO_ENV }}" > mongo.env
          mkdir credentials

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/arm64, linux/arm64/v8'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DEV_DOCKER_REPO }}

      ## docker-compose.yml 서버에 이동
      - name: docker-compose.yml 파일 이동
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: docker-compose-dev.yml
          target: "/home/${{ secrets.DEV_USER }}/${{ secrets.DIR }}"

      - name: Docker 이미지 pull 이후 down/up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DIR }}
            sudo echo "${{ secrets.DEV_ENV }}" > .env
            sudo echo "${{ secrets.DEV_MONGO_ENV }}" > mongo.env
            sudo echo "${{ secrets.DEV_COMPOSE_ENV }}" > docker-compose.env
            sudo echo "${{ secrets.GOOGLE_CREDENTIAL }}" > ./credentials/google_credential.json
            sudo docker-compose -f docker-compose-dev.yml --env-file docker-compose.env down -v
            sudo docker pull ${{ secrets.DEV_DOCKER_REPO }}
            sudo docker-compose -f docker-compose-dev.yml --env-file docker-compose.env up -d --build