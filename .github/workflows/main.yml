name: develop branch CI/CD

on: 
  push:            
    branches: develop ## develop 브랜치 대상
    
jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: ssh 접속 테스트
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          
      - name: repository 내용 가져오기
        uses: actions/checkout@v3

      - name: 환경변수 생성
        run: |
          touch env
          echo "${{ secrets.DEV_ENV }}" > .env
          cat .env
       
      - name: 도커 이미지 빌드
        # if: contains(github.ref, 'main')
        # 우선은 dev와 prod를 별개의 docker repository로 설정하기
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DEV_DOCKER_REPO }} .
          docker push ${{ secrets.DEV_DOCKER_REPO }}

     #  ## gradle build
     #  - name: Build with Gradle
     #    run: ./gradlew build -x test
        
     
      
     #  ## docker-compose.yml 서버에 이동
     #  - uses: actions/checkout@master
     #  - name: copy file via ssh password
     #    uses: appleboy/scp-action@master
     #    with:
     #      host: ${{ secrets.HOST }}
     #      username: ${{ secrets.USERNAME }}
     #      key: ${{ secrets.KEY }}
     #      port: ${{ secrets.PORT }}
     #      source: "docker-compose.yml"
     #      target: "/home/${{ secrets.USERNAME }}"
    
     # ## deploy to develop
     #  - name: SSH Remote Commands
     #    uses: appleboy/ssh-action@v0.1.9
     #    with:
     #      host: ${{ secrets.HOST }}
     #      username: ${{ secrets.USERNAME }}
     #      key: ${{ secrets.KEY }}
     #      port: ${{ secrets.PORT }}
     #      script: |
     #        pwd
     #        sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
     #        sudo docker-compose down -v
     #        sudo docker rm -f $(docker ps -qa)
     #        sudo docker-compose pull
     #        sudo docker-compose up -d